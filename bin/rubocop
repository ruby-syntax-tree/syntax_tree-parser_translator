#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/inline"
gemfile do
  source "https://rubygems.org"
  gem "rubocop"
  gem "syntax_tree"
end

$:.unshift File.expand_path("../lib", __dir__)
require "syntax_tree/translator"

class RuboCop::AST::ProcessedSource
  private

  def tokenize(parser)
    visitor = SyntaxTree::Translator::Parser.new("(string)", 1)

    ast = visitor.visit(SyntaxTree.parse(@buffer.source))
    ast.complete!

    _, comments, tokens = parser.tokenize(@buffer)
    tokens.map! { |t| RuboCop::AST::Token.from_parser_token(t) }

    [ast, comments, tokens]
  rescue Parser::SyntaxError
    [nil, [], []]
  end
end

class SyntaxTree::Translator::Parser
  def s(type, children = [], opts = {})
    ::RuboCop::AST::Builder::NODE_MAP.fetch(type, ::RuboCop::AST::Node).new(type, children, opts)
  end
end

exit(RuboCop::CLI.new.run)
